{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  // Function to fetch initial messages\n  const fetchMessages = async () => {\n    try {\n      const response1 = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      const response2 = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n\n      // Combine and format messages\n      const allMessages = [...response1.data.map(msg => ({\n        name: user === null || user === void 0 ? void 0 : user.first_name,\n        img: user === null || user === void 0 ? void 0 : user.url,\n        message: msg.message,\n        timestamp: msg.timestamp\n      })), ...response2.data.map(msg => ({\n        name: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name,\n        img: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url,\n        message: msg.message,\n        timestamp: msg.timestamp\n      }))];\n\n      // Sort messages by timestamp\n      setMessages(allMessages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp)));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchMessages(); // Fetch initial messages\n\n    // Set up Socket.IO connection\n    const newSocket = io('http://localhost:8000'); // Adjust the URL as needed\n    setSocket(newSocket);\n\n    // Listen for incoming messages\n    newSocket.on('receiveMessage', message => {\n      setMessages(prevMessages => [...prevMessages, {\n        name: message.from_userId === userId ? user === null || user === void 0 ? void 0 : user.first_name : clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name,\n        img: message.from_userId === userId ? user === null || user === void 0 ? void 0 : user.url : clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url,\n        message: message.text,\n        timestamp: message.timestamp\n      }]);\n    });\n    return () => {\n      newSocket.off('receiveMessage');\n      newSocket.disconnect();\n    };\n  }, [userId, clickedUserId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      descendingOrderMessages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      user: user,\n      clickedUser: clickedUser,\n      getUsersMessages: fetchMessages // You can call this to refresh messages if needed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"0MbKzFx+OKNdOU5qFCjPjQZWhEE=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["axios","Chat","ChatInput","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","user","clickedUser","_s","userId","user_id","clickedUserId","messages","setMessages","socket","setSocket","fetchMessages","response1","get","params","correspondingUserId","response2","allMessages","data","map","msg","name","first_name","img","url","message","timestamp","sort","a","b","Date","error","console","log","newSocket","on","prevMessages","from_userId","text","off","disconnect","children","descendingOrderMessages","fileName","_jsxFileName","lineNumber","columnNumber","getUsersMessages","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import axios from 'axios';\r\nimport Chat from './Chat';\r\nimport ChatInput from './ChatInput';\r\nimport { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id;\r\n    const clickedUserId = clickedUser?.user_id;\r\n    const [messages, setMessages] = useState([]);\r\n    const [socket, setSocket] = useState(null);\r\n\r\n    // Function to fetch initial messages\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response1 = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: userId, correspondingUserId: clickedUserId },\r\n            });\r\n            const response2 = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: clickedUserId, correspondingUserId: userId },\r\n            });\r\n\r\n            // Combine and format messages\r\n            const allMessages = [\r\n                ...response1.data.map((msg) => ({\r\n                    name: user?.first_name,\r\n                    img: user?.url,\r\n                    message: msg.message,\r\n                    timestamp: msg.timestamp,\r\n                })),\r\n                ...response2.data.map((msg) => ({\r\n                    name: clickedUser?.first_name,\r\n                    img: clickedUser?.url,\r\n                    message: msg.message,\r\n                    timestamp: msg.timestamp,\r\n                })),\r\n            ];\r\n\r\n            // Sort messages by timestamp\r\n            setMessages(allMessages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp)));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMessages(); // Fetch initial messages\r\n\r\n        // Set up Socket.IO connection\r\n        const newSocket = io('http://localhost:8000'); // Adjust the URL as needed\r\n        setSocket(newSocket);\r\n\r\n        // Listen for incoming messages\r\n        newSocket.on('receiveMessage', (message) => {\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                {\r\n                    name: message.from_userId === userId ? user?.first_name : clickedUser?.first_name,\r\n                    img: message.from_userId === userId ? user?.url : clickedUser?.url,\r\n                    message: message.text,\r\n                    timestamp: message.timestamp,\r\n                },\r\n            ]);\r\n        });\r\n\r\n        return () => {\r\n            newSocket.off('receiveMessage');\r\n            newSocket.disconnect();\r\n        };\r\n    }, [userId, clickedUserId]);\r\n\r\n    return (\r\n        <>\r\n            <Chat descendingOrderMessages={messages} />\r\n            <ChatInput\r\n                user={user}\r\n                clickedUser={clickedUser}\r\n                getUsersMessages={fetchMessages} // You can call this to refresh messages if needed\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}