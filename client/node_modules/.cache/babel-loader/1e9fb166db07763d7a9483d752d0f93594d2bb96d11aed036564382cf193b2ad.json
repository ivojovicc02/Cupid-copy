{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(\"Chatbot component rendered\");\n  // Funkcija koja se poziva kada korisnik pošalje novu poruku\n  const handleNewUserMessage = async newMessage => {\n    // Pošaljite poruku na backend\n    try {\n      const response = await axios.post('http://localhost:8000/api/message', {\n        message: newMessage\n      });\n      // Dodajte odgovor chatbota u chat widget\n      addResponseMessage(response.data.reply);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      addResponseMessage(\"Žao mi je, nisam mogao obraditi vaš zahtjev.\");\n    }\n  };\n\n  // Opcionalno: dodajte inicijalne poruke ili pozdrav\n  useEffect(() => {\n    addResponseMessage(\"Pozdrav! Kako vam mogu pomoći danas?\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addResponseMessage(\"Test response!\"),\n      children: \"Test Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","Widget","addResponseMessage","axios","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","useState","console","log","handleNewUserMessage","newMessage","response","post","message","data","reply","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/Chatbot.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Widget, addResponseMessage } from 'react-chat-widget';\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport axios from 'axios';\r\n\r\nconst Chatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  console.log(\"Chatbot component rendered\");\r\n    // Funkcija koja se poziva kada korisnik pošalje novu poruku\r\n    const handleNewUserMessage = async (newMessage) => {\r\n        // Pošaljite poruku na backend\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/message', { message: newMessage });\r\n            // Dodajte odgovor chatbota u chat widget\r\n            addResponseMessage(response.data.reply);\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            addResponseMessage(\"Žao mi je, nisam mogao obraditi vaš zahtjev.\");\r\n        }\r\n    };\r\n\r\n    // Opcionalno: dodajte inicijalne poruke ili pozdrav\r\n    useEffect(() => {\r\n        addResponseMessage(\"Pozdrav! Kako vam mogu pomoći danas?\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"chatbot\">\r\n            <Widget handleNewUserMessage={handleNewUserMessage} />\r\n            <button onClick={() => addResponseMessage(\"Test response!\")}>Test Response</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,EAAEC,kBAAkB,QAAQ,mBAAmB;AAC9D,OAAO,kCAAkC;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACvC;EACA,MAAMC,oBAAoB,GAAG,MAAOC,UAAU,IAAK;IAC/C;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,mCAAmC,EAAE;QAAEC,OAAO,EAAEH;MAAW,CAAC,CAAC;MAC/F;MACAZ,kBAAkB,CAACa,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9ClB,kBAAkB,CAAC,8CAA8C,CAAC;IACtE;EACJ,CAAC;;EAED;EACAF,SAAS,CAAC,MAAM;IACZE,kBAAkB,CAAC,sCAAsC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIG,OAAA;IAAKgB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBjB,OAAA,CAACJ,MAAM;MAACY,oBAAoB,EAAEA;IAAqB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMzB,kBAAkB,CAAC,gBAAgB,CAAE;MAAAoB,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd,CAAC;AAACnB,EAAA,CA3BID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}