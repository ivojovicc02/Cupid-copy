{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n      setClickedUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, []);\n  const messages = [];\n  usersMessages === null || usersMessages === void 0 ? void 0 : usersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage['name'] = user === null || user === void 0 ? void 0 : user.first_name;\n    formattedMessage['img'] = user === null || user === void 0 ? void 0 : user.url;\n    formattedMessage['message'] = message.message;\n    formattedMessage['timestamp'] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  clickedUsersMessages === null || clickedUsersMessages === void 0 ? void 0 : clickedUsersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage['name'] = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name;\n    formattedMessage['img'] = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url;\n    formattedMessage['message'] = message.message;\n    formattedMessage['timestamp'] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  const descendingOrderMessages = messages === null || messages === void 0 ? void 0 : messages.sort((a, b) => a.timestamp.localeCompare(b.timestamp));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      descendingOrderMessages: descendingOrderMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      user: user,\n      clickedUser: clickedUser,\n      getUsersMessages: getUsersMessages,\n      getClickedUsersMessages: getClickedUsersMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"1PPsRZVczxjad/EsG6nnpHRTp3c=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["axios","Chat","ChatInput","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatDisplay","user","clickedUser","_s","userId","user_id","clickedUserId","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","getUsersMessages","response","get","params","correspondingUserId","data","error","console","log","getClickedUsersMessages","messages","forEach","message","formattedMessage","first_name","url","timestamp","push","descendingOrderMessages","sort","a","b","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import axios from 'axios'\r\nimport Chat from './Chat'\r\nimport ChatInput from './ChatInput'\r\nimport {useState, useEffect} from \"react\"\r\n\r\n\r\nconst ChatDisplay = ({user,clickedUser}) => {\r\n    const userId = user?.user_id\r\n    const clickedUserId = clickedUser?.user_id\r\n    const [usersMessages, setUsersMessages] = useState(null)\r\n    const [clickedUsersMessages,setClickedUsersMessages] = useState(null)\r\n\r\n    const getUsersMessages = async () => {\r\n\r\n        try{\r\n            const response = await axios.get('http://localhost:8000/messages',{\r\n                params:{userId: userId,correspondingUserId: clickedUserId}\r\n            })\r\n            setUsersMessages(response.data)\r\n        }\r\n        catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    const getClickedUsersMessages = async () => {\r\n\r\n        try{\r\n            const response = await axios.get('http://localhost:8000/messages',{\r\n                params:{userId: clickedUserId,correspondingUserId: userId}\r\n            })\r\n            setClickedUsersMessages(response.data)\r\n        }\r\n        catch (error){\r\n            console.log(error)\r\n        }\r\n    }\r\n  \r\n    useEffect(() => {\r\n        getUsersMessages()\r\n        getClickedUsersMessages()\r\n        \r\n    }, [])\r\n\r\n    const messages = []\r\n\r\n    \r\n\r\n    usersMessages?.forEach(message => {\r\n        const formattedMessage = {}\r\n        formattedMessage['name'] = user?.first_name\r\n        formattedMessage['img'] = user?.url\r\n        formattedMessage['message'] = message.message\r\n        formattedMessage['timestamp'] = message.timestamp\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    clickedUsersMessages?.forEach(message => {\r\n        const formattedMessage = {}\r\n        formattedMessage['name'] = clickedUser?.first_name\r\n        formattedMessage['img'] = clickedUser?.url\r\n        formattedMessage['message'] = message.message\r\n        formattedMessage['timestamp'] = message.timestamp\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    const descendingOrderMessages = messages?.sort((a,b) => a.timestamp.localeCompare(b.timestamp))\r\n\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n       <Chat descendingOrderMessages={descendingOrderMessages} />\r\n       <ChatInput  \r\n         user={user}\r\n         clickedUser={clickedUser} \r\n         getUsersMessages={getUsersMessages} \r\n         getClickedUsersMessages={getClickedUsersMessages}/>\r\n       </>\r\n\r\n    )\r\n}\r\nexport default ChatDisplay"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}