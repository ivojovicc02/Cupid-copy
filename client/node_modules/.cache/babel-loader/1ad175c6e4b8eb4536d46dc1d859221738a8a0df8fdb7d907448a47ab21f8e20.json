{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst ChatDisplay = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n      setClickedUsersMessages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n\n    // Pridru탑i se sobi na osnovu korisni훾kih ID-ova\n    socket.emit('join_room', {\n      userId,\n      correspondingUserId: clickedUserId\n    });\n\n    // Osluhni za primljene poruke putem Socket.io\n    socket.on('receive_message', messageData => {\n      setUsersMessages(prevMessages => [...prevMessages, messageData]);\n    });\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [userId, clickedUserId]);\n  const messages = [];\n  usersMessages === null || usersMessages === void 0 ? void 0 : usersMessages.forEach(message => {\n    const formattedMessage = {\n      name: user === null || user === void 0 ? void 0 : user.first_name,\n      img: user === null || user === void 0 ? void 0 : user.url,\n      message: message.message,\n      timestamp: message.timestamp\n    };\n    messages.push(formattedMessage);\n  });\n  clickedUsersMessages === null || clickedUsersMessages === void 0 ? void 0 : clickedUsersMessages.forEach(message => {\n    const formattedMessage = {\n      name: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name,\n      img: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url,\n      message: message.message,\n      timestamp: message.timestamp\n    };\n    messages.push(formattedMessage);\n  });\n  const descendingOrderMessages = messages === null || messages === void 0 ? void 0 : messages.sort((a, b) => a.timestamp.localeCompare(b.timestamp));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      descendingOrderMessages: descendingOrderMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      user: user,\n      clickedUser: clickedUser,\n      getUsersMessages: getUsersMessages,\n      getClickedUsersMessages: getClickedUsersMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"2NEB42wPVsAhSx/Wnejt8YtyMTY=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","Chat","ChatInput","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ChatDisplay","user","clickedUser","_s","userId","user_id","clickedUserId","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","getUsersMessages","response","get","params","correspondingUserId","data","error","console","log","getClickedUsersMessages","emit","on","messageData","prevMessages","off","messages","forEach","message","formattedMessage","name","first_name","img","url","timestamp","push","descendingOrderMessages","sort","a","b","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport Chat from './Chat'\r\nimport ChatInput from './ChatInput'\r\nimport { io } from 'socket.io-client'\r\n\r\nconst socket = io('http://localhost:8000') \r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id\r\n    const clickedUserId = clickedUser?.user_id\r\n    const [usersMessages, setUsersMessages] = useState(null)\r\n    const [clickedUsersMessages, setClickedUsersMessages] = useState(null)\r\n\r\n    const getUsersMessages = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: userId, correspondingUserId: clickedUserId }\r\n            })\r\n            setUsersMessages(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getClickedUsersMessages = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/messages', {\r\n                params: { userId: clickedUserId, correspondingUserId: userId }\r\n            })\r\n            setClickedUsersMessages(response.data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsersMessages()\r\n        getClickedUsersMessages()\r\n\r\n        // Pridru탑i se sobi na osnovu korisni훾kih ID-ova\r\n        socket.emit('join_room', { userId, correspondingUserId: clickedUserId })\r\n\r\n        // Osluhni za primljene poruke putem Socket.io\r\n        socket.on('receive_message', (messageData) => {\r\n            setUsersMessages((prevMessages) => [...prevMessages, messageData])\r\n        })\r\n\r\n        return () => {\r\n            socket.off('receive_message')\r\n        }\r\n    }, [userId, clickedUserId])\r\n\r\n    const messages = []\r\n\r\n    usersMessages?.forEach(message => {\r\n        const formattedMessage = {\r\n            name: user?.first_name,\r\n            img: user?.url,\r\n            message: message.message,\r\n            timestamp: message.timestamp\r\n        }\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    clickedUsersMessages?.forEach(message => {\r\n        const formattedMessage = {\r\n            name: clickedUser?.first_name,\r\n            img: clickedUser?.url,\r\n            message: message.message,\r\n            timestamp: message.timestamp\r\n        }\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    const descendingOrderMessages = messages?.sort((a, b) => a.timestamp.localeCompare(b.timestamp))\r\n\r\n    return (\r\n        <>\r\n            <Chat descendingOrderMessages={descendingOrderMessages} />\r\n            <ChatInput\r\n                user={user}\r\n                clickedUser={clickedUser}\r\n                getUsersMessages={getUsersMessages}\r\n                getClickedUsersMessages={getClickedUsersMessages}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatDisplay"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}