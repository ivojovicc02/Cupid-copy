{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  currentUserId,\n  recipientUserId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io('http://localhost:8000'); // Adjust the URL as needed\n    setSocket(newSocket);\n    newSocket.on('receiveMessage', message => {\n      // Update state with the new message\n      updateChatMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      newSocket.off('receiveMessage');\n      newSocket.disconnect();\n    };\n  }, []);\n  const handleInputChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (message.trim() !== '') {\n      const messageData = {\n        from_userId: currentUserId,\n        to_userId: recipientUserId,\n        text: message,\n        timestamp: new Date()\n      };\n      socket.emit('sendMessage', messageData);\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message...\",\n      value: message,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"ZIT5GSQSmcnBdqGaG/31mZp5qLk=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","ChatInput","currentUserId","recipientUserId","_s","message","setMessage","socket","setSocket","newSocket","on","updateChatMessages","prevMessages","off","disconnect","handleInputChange","e","target","value","handleSendMessage","trim","messageData","from_userId","to_userId","text","timestamp","Date","emit","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst ChatInput = ({ currentUserId, recipientUserId }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io('http://localhost:8000'); // Adjust the URL as needed\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on('receiveMessage', (message) => {\r\n      // Update state with the new message\r\n      updateChatMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.off('receiveMessage');\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (message.trim() !== '') {\r\n      const messageData = {\r\n        from_userId: currentUserId,\r\n        to_userId: recipientUserId,\r\n        text: message,\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      socket.emit('sendMessage', messageData);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type your message...\"\r\n        value={message}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAGX,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC/CU,SAAS,CAACC,SAAS,CAAC;IAEpBA,SAAS,CAACC,EAAE,CAAC,gBAAgB,EAAGL,OAAO,IAAK;MAC1C;MACAM,kBAAkB,CAAEC,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEP,OAAO,CAAC,CAAC;IAClE,CAAC,CAAC;IAEF,OAAO,MAAM;MACXI,SAAS,CAACI,GAAG,CAAC,gBAAgB,CAAC;MAC/BJ,SAAS,CAACK,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BV,UAAU,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAId,OAAO,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB,MAAMC,WAAW,GAAG;QAClBC,WAAW,EAAEpB,aAAa;QAC1BqB,SAAS,EAAEpB,eAAe;QAC1BqB,IAAI,EAAEnB,OAAO;QACboB,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MAEDnB,MAAM,CAACoB,IAAI,CAAC,aAAa,EAAEN,WAAW,CAAC;MACvCf,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAK4B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCb,KAAK,EAAEb,OAAQ;MACf2B,QAAQ,EAAEjB;IAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFpC,OAAA;MAAQqC,OAAO,EAAElB,iBAAkB;MAAAU,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAChC,EAAA,CAhDIH,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAkDf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}