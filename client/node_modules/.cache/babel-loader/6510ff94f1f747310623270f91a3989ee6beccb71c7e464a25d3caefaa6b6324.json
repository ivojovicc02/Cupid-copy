{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSocket } from './SocketContext'; // Adjust path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  currentUserId,\n  recipientUserId,\n  onMessageSent\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const socket = useSocket();\n  const handleInputChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (message.trim() !== '') {\n      const messageData = {\n        from_userId: currentUserId,\n        to_userId: recipientUserId,\n        text: message,\n        timestamp: new Date()\n      };\n      socket.emit('sendMessage', messageData);\n      setMessage('');\n      if (onMessageSent) onMessageSent(); // Call this prop if provided\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message...\",\n      value: message,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"Qc7UpkSMcGIWE0Gmf3NAOLXty1U=\", false, function () {\n  return [useSocket];\n});\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useSocket","jsxDEV","_jsxDEV","ChatInput","currentUserId","recipientUserId","onMessageSent","_s","message","setMessage","socket","handleInputChange","e","target","value","handleSendMessage","trim","messageData","from_userId","to_userId","text","timestamp","Date","emit","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSocket } from './SocketContext'; // Adjust path as needed\r\n\r\nconst ChatInput = ({ currentUserId, recipientUserId, onMessageSent }) => {\r\n    const [message, setMessage] = useState('');\r\n    const socket = useSocket();\r\n\r\n    const handleInputChange = (e) => {\r\n        setMessage(e.target.value);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (message.trim() !== '') {\r\n            const messageData = {\r\n                from_userId: currentUserId,\r\n                to_userId: recipientUserId,\r\n                text: message,\r\n                timestamp: new Date(),\r\n            };\r\n\r\n            socket.emit('sendMessage', messageData);\r\n            setMessage('');\r\n            if (onMessageSent) onMessageSent(); // Call this prop if provided\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-input\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Type your message...\"\r\n                value={message}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button onClick={handleSendMessage}>Send</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInput;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,aAAa;EAAEC,eAAe;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,MAAM,GAAGV,SAAS,CAAC,CAAC;EAE1B,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC7BH,UAAU,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIP,OAAO,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB,MAAMC,WAAW,GAAG;QAChBC,WAAW,EAAEd,aAAa;QAC1Be,SAAS,EAAEd,eAAe;QAC1Be,IAAI,EAAEZ,OAAO;QACba,SAAS,EAAE,IAAIC,IAAI,CAAC;MACxB,CAAC;MAEDZ,MAAM,CAACa,IAAI,CAAC,aAAa,EAAEN,WAAW,CAAC;MACvCR,UAAU,CAAC,EAAE,CAAC;MACd,IAAIH,aAAa,EAAEA,aAAa,CAAC,CAAC,CAAC,CAAC;IACxC;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBvB,OAAA;MACIwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCb,KAAK,EAAEN,OAAQ;MACfoB,QAAQ,EAAEjB;IAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF9B,OAAA;MAAQ+B,OAAO,EAAElB,iBAAkB;MAAAU,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAACzB,EAAA,CAlCIJ,SAAS;EAAA,QAEIH,SAAS;AAAA;AAAAkC,EAAA,GAFtB/B,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}