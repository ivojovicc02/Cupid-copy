{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000'); // Povezivanje na backend server sa Socket.io\n\nconst ChatInput = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const [textArea, setTextArea] = useState(\"\");\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const addMessage = async () => {\n    if (textArea.trim() === \"\") return; // Sprije훾ava slanje praznih poruka\n\n    const messageData = {\n      timestamp: new Date().toISOString(),\n      from_userId: userId,\n      to_userId: clickedUserId,\n      message: textArea\n    };\n    try {\n      await axios.post('http://localhost:8000/message', {\n        message: messageData\n      });\n      socket.emit('send_message', messageData); // Emitiraj poruku putem Socket.io\n      setTextArea(\"\"); // O훾isti textarea nakon slanja\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textArea,\n      onChange: e => setTextArea(e.target.value),\n      placeholder: \"Type your message here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondary-button\",\n      onClick: addMessage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"4eY01J2zdQ3jgJyvFt1ScRxGpfs=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["useState","axios","io","jsxDEV","_jsxDEV","socket","ChatInput","user","clickedUser","_s","textArea","setTextArea","userId","user_id","clickedUserId","addMessage","trim","messageData","timestamp","Date","toISOString","from_userId","to_userId","message","post","emit","error","console","log","className","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatInput.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000'); // Povezivanje na backend server sa Socket.io\r\n\r\nconst ChatInput = ({ user, clickedUser }) => {\r\n    const [textArea, setTextArea] = useState(\"\");\r\n    const userId = user?.user_id;\r\n    const clickedUserId = clickedUser?.user_id;\r\n\r\n    const addMessage = async () => {\r\n        if (textArea.trim() === \"\") return; // Sprije훾ava slanje praznih poruka\r\n\r\n        const messageData = {\r\n            timestamp: new Date().toISOString(),\r\n            from_userId: userId,\r\n            to_userId: clickedUserId,\r\n            message: textArea\r\n        };\r\n\r\n        try {\r\n            await axios.post('http://localhost:8000/message', { message: messageData });\r\n            socket.emit('send_message', messageData); // Emitiraj poruku putem Socket.io\r\n            setTextArea(\"\"); // O훾isti textarea nakon slanja\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-input\">\r\n            <textarea \r\n                value={textArea} \r\n                onChange={(e) => setTextArea(e.target.value)} \r\n                placeholder=\"Type your message here...\"\r\n            />\r\n            <button className=\"secondary-button\" onClick={addMessage}>\r\n                Submit\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInput;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAMI,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,MAAM,GAAGL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,OAAO;EAC5B,MAAMC,aAAa,GAAGN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,OAAO;EAE1C,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIL,QAAQ,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC;;IAEpC,MAAMC,WAAW,GAAG;MAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,WAAW,EAAET,MAAM;MACnBU,SAAS,EAAER,aAAa;MACxBS,OAAO,EAAEb;IACb,CAAC;IAED,IAAI;MACA,MAAMT,KAAK,CAACuB,IAAI,CAAC,+BAA+B,EAAE;QAAED,OAAO,EAAEN;MAAY,CAAC,CAAC;MAC3EZ,MAAM,CAACoB,IAAI,CAAC,cAAc,EAAER,WAAW,CAAC,CAAC,CAAC;MAC1CN,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB1B,OAAA;MACI2B,KAAK,EAAErB,QAAS;MAChBsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFnC,OAAA;MAAQyB,SAAS,EAAC,kBAAkB;MAACW,OAAO,EAAEzB,UAAW;MAAAe,QAAA,EAAC;IAE1D;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC9B,EAAA,CApCIH,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}