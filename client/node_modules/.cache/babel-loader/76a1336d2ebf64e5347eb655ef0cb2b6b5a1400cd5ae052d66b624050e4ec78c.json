{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Chat from './Chat';\nimport ChatInput from './ChatInput';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst ChatDisplay = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [messages, setMessages] = useState([]); // Sve poruke u jednom stanju\n\n  const getMessages = async () => {\n    try {\n      const [responseUserMessages, responseClickedUserMessages] = await Promise.all([axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      }), axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      })]);\n      // Kombiniraj poruke iz oba korisnika\n      const allMessages = [...responseUserMessages.data.map(msg => ({\n        ...msg,\n        name: user === null || user === void 0 ? void 0 : user.first_name,\n        img: user === null || user === void 0 ? void 0 : user.url\n      })), ...responseClickedUserMessages.data.map(msg => ({\n        ...msg,\n        name: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name,\n        img: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url\n      }))];\n      setMessages(allMessages);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getMessages();\n    socket.emit('join_room', {\n      userId,\n      correspondingUserId: clickedUserId\n    });\n    socket.on('receive_message', messageData => {\n      // Ažuriraj stanje poruka sa primljenom porukom\n      setMessages(prevMessages => [...prevMessages, messageData]);\n    });\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [userId, clickedUserId]);\n\n  // Sortiraj poruke po vremenskoj oznaci\n  const descendingOrderMessages = messages.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      descendingOrderMessages: descendingOrderMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      user: user,\n      clickedUser: clickedUser,\n      getMessages: getMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatDisplay, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","Chat","ChatInput","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ChatDisplay","user","clickedUser","_s","userId","user_id","clickedUserId","messages","setMessages","getMessages","responseUserMessages","responseClickedUserMessages","Promise","all","get","params","correspondingUserId","allMessages","data","map","msg","name","first_name","img","url","error","console","log","emit","on","messageData","prevMessages","off","descendingOrderMessages","sort","a","b","Date","timestamp","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chat from './Chat';\r\nimport ChatInput from './ChatInput';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id;\r\n    const clickedUserId = clickedUser?.user_id;\r\n    const [messages, setMessages] = useState([]); // Sve poruke u jednom stanju\r\n\r\n    const getMessages = async () => {\r\n        try {\r\n            const [responseUserMessages, responseClickedUserMessages] = await Promise.all([\r\n                axios.get('http://localhost:8000/messages', {\r\n                    params: { userId: userId, correspondingUserId: clickedUserId }\r\n                }),\r\n                axios.get('http://localhost:8000/messages', {\r\n                    params: { userId: clickedUserId, correspondingUserId: userId }\r\n                })\r\n            ]);\r\n            // Kombiniraj poruke iz oba korisnika\r\n            const allMessages = [\r\n                ...responseUserMessages.data.map(msg => ({\r\n                    ...msg,\r\n                    name: user?.first_name,\r\n                    img: user?.url,\r\n                })),\r\n                ...responseClickedUserMessages.data.map(msg => ({\r\n                    ...msg,\r\n                    name: clickedUser?.first_name,\r\n                    img: clickedUser?.url,\r\n                })),\r\n            ];\r\n            setMessages(allMessages);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessages();\r\n\r\n        socket.emit('join_room', { userId, correspondingUserId: clickedUserId });\r\n\r\n        socket.on('receive_message', (messageData) => {\r\n            // Ažuriraj stanje poruka sa primljenom porukom\r\n            setMessages((prevMessages) => [...prevMessages, messageData]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receive_message');\r\n        };\r\n    }, [userId, clickedUserId]);\r\n\r\n    // Sortiraj poruke po vremenskoj oznaci\r\n    const descendingOrderMessages = messages.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n\r\n    return (\r\n        <>\r\n            <Chat descendingOrderMessages={descendingOrderMessages} />\r\n            <ChatInput\r\n                user={user}\r\n                clickedUser={clickedUser}\r\n                getMessages={getMessages}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}