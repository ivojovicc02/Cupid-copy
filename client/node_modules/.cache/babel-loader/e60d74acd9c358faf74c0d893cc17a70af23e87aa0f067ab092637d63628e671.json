{"ast":null,"code":"var url = require('url');\nvar urlJoin = require('url-join');\nvar http = require('http');\nvar ServerResponse = http.ServerResponse;\nvar WebSocketServer = require('ws').Server;\nvar wsServers = {};\n\n/**\n * @param {express.Application} app\n * @param {http.Server} [server]\n */\nmodule.exports = function (app, server) {\n  if (!server) {\n    server = http.createServer(app);\n    app.listen = function () {\n      return server.listen.apply(server, arguments);\n    };\n  }\n  function addSocketRoute(route, middleware, callback) {\n    var args = [].splice.call(arguments, 0);\n    var wsPath = urlJoin(app.mountpath, route);\n    if (args.length < 2) throw new SyntaxError('Invalid number of arguments');\n    if (args.length === 2) {\n      middleware = [middleware];\n    } else if (typeof middleware === 'object') {\n      middleware.push(callback);\n    } else {\n      middleware = args.slice(1);\n    }\n    var wss = new WebSocketServer({\n      server: server,\n      path: wsPath\n    });\n    wsServers[wsPath] = wss;\n    wss.on('connection', function (ws) {\n      var response = new ServerResponse(ws.upgradeReq);\n      response.writeHead = function (statusCode) {\n        if (statusCode > 200) ws.close();\n      };\n      ws.upgradeReq.method = 'ws';\n      app.handle(ws.upgradeReq, response, function (err) {\n        var idx = 0;\n        (function next(err) {\n          if (err) return;\n          var cur = middleware[idx++];\n          if (!middleware[idx]) {\n            cur(ws, ws.upgradeReq);\n          } else {\n            cur(ws.upgradeReq, response, next);\n          }\n        })(err);\n      });\n    });\n    return app;\n  }\n  ;\n  app.ws = addSocketRoute;\n  return {\n    app: app,\n    getWss: function (route) {\n      return wsServers[route];\n    }\n  };\n};","map":{"version":3,"names":["url","require","urlJoin","http","ServerResponse","WebSocketServer","Server","wsServers","module","exports","app","server","createServer","listen","apply","arguments","addSocketRoute","route","middleware","callback","args","splice","call","wsPath","mountpath","length","SyntaxError","push","slice","wss","path","on","ws","response","upgradeReq","writeHead","statusCode","close","method","handle","err","idx","next","cur","getWss"],"sources":["C:/Users/Jovici/desktop/zavrsni/tinder-clone/node_modules/express-ws/index.js"],"sourcesContent":["var url = require('url');\nvar urlJoin = require('url-join');\nvar http = require('http');\nvar ServerResponse = http.ServerResponse;\nvar WebSocketServer = require('ws').Server;\n\nvar wsServers = {};\n\n/**\n * @param {express.Application} app\n * @param {http.Server} [server]\n */\nmodule.exports = function (app, server) {\n  if(!server) {\n    server = http.createServer(app);\n\n    app.listen = function()\n    {\n      return server.listen.apply(server, arguments)\n    }\n  }\n\n  function addSocketRoute(route, middleware, callback) {\n    var args = [].splice.call(arguments, 0);\n    var wsPath = urlJoin(app.mountpath, route);\n\n    if (args.length < 2)\n      throw new SyntaxError('Invalid number of arguments');\n\n    if (args.length === 2) {\n      middleware = [middleware];\n    } else if (typeof middleware === 'object') {\n      middleware.push(callback);\n    } else {\n      middleware = args.slice(1);\n    }\n\n    var wss = new WebSocketServer({\n      server: server,\n      path: wsPath\n    });\n\n    wsServers[wsPath] = wss;\n\n    wss.on('connection', function(ws) {\n      var response = new ServerResponse(ws.upgradeReq);\n      response.writeHead = function (statusCode) {\n        if (statusCode > 200) ws.close();\n      };\n      ws.upgradeReq.method = 'ws';\n\n      app.handle(ws.upgradeReq, response, function(err) {\n        var idx = 0;\n        (function next (err) {\n          if (err) return;\n          var cur = middleware[idx++];\n          if (!middleware[idx]) {\n            cur(ws, ws.upgradeReq);\n          } else {\n            cur(ws.upgradeReq, response, next);\n          }\n        }(err));\n      });\n    });\n\n    return app;\n  };\n\n  app.ws = addSocketRoute;\n\n  return {\n    app: app,\n    getWss: function (route) {\n      return wsServers[route];\n    }\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}