{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(\"Chatbot component rendered\");\n\n  // Funkcija koja se poziva kada korisnik pošalje novu poruku\n  const handleNewUserMessage = async newMessage => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/message', {\n        message: newMessage\n      });\n      addResponseMessage(response.data.reply);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      addResponseMessage(\"Žao mi je, nisam mogao obraditi vaš zahtjev.\");\n    }\n  };\n\n  // Dodajemo inicijalne poruke kad se widget otvori\n  useEffect(() => {\n    if (isOpen) {\n      addResponseMessage(\"Pozdrav! Kako vam mogu pomoći danas?\");\n    }\n  }, [isOpen]);\n\n  // Funkcija koja se koristi za zatvaranje widgeta kada se klikne na 'x'\n  const handleToggleChat = () => {\n    setIsOpen(!isOpen); // Promijenimo state na suprotno\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleChat,\n      children: isOpen ? 'Close Chat' : 'Open Chat'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage,\n      title: \"Welcome\",\n      subtitle: \"This is your chat subtitle\",\n      handleToggle: handleToggleChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useState","Widget","addResponseMessage","axios","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","console","log","handleNewUserMessage","newMessage","response","post","message","data","reply","error","handleToggleChat","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","subtitle","handleToggle","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/Chatbot.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Widget, addResponseMessage } from 'react-chat-widget';\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport axios from 'axios';\r\n\r\nconst Chatbot = () => {\r\n    const [isOpen, setIsOpen] = useState(false); \r\n\r\n    console.log(\"Chatbot component rendered\");\r\n\r\n    // Funkcija koja se poziva kada korisnik pošalje novu poruku\r\n    const handleNewUserMessage = async (newMessage) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/message', { message: newMessage });\r\n            addResponseMessage(response.data.reply);\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n            addResponseMessage(\"Žao mi je, nisam mogao obraditi vaš zahtjev.\");\r\n        }\r\n    };\r\n\r\n    // Dodajemo inicijalne poruke kad se widget otvori\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            addResponseMessage(\"Pozdrav! Kako vam mogu pomoći danas?\");\r\n        }\r\n    }, [isOpen]);\r\n\r\n    // Funkcija koja se koristi za zatvaranje widgeta kada se klikne na 'x'\r\n    const handleToggleChat = () => {\r\n        setIsOpen(!isOpen); // Promijenimo state na suprotno\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot\">\r\n            <button onClick={handleToggleChat}>\r\n                {isOpen ? 'Close Chat' : 'Open Chat'}\r\n            </button>\r\n            {isOpen && (\r\n                <Widget \r\n                    handleNewUserMessage={handleNewUserMessage} \r\n                    title=\"Welcome\"\r\n                    subtitle=\"This is your chat subtitle\"\r\n                    handleToggle={handleToggleChat} \r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,kBAAkB,QAAQ,mBAAmB;AAC9D,OAAO,kCAAkC;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3CU,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;;EAEzC;EACA,MAAMC,oBAAoB,GAAG,MAAOC,UAAU,IAAK;IAC/C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,mCAAmC,EAAE;QAAEC,OAAO,EAAEH;MAAW,CAAC,CAAC;MAC/FX,kBAAkB,CAACY,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CjB,kBAAkB,CAAC,8CAA8C,CAAC;IACtE;EACJ,CAAC;;EAED;EACAH,SAAS,CAAC,MAAM;IACZ,IAAIS,MAAM,EAAE;MACRN,kBAAkB,CAAC,sCAAsC,CAAC;IAC9D;EACJ,CAAC,EAAE,CAACM,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC3BX,SAAS,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACIH,OAAA;IAAKgB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBjB,OAAA;MAAQkB,OAAO,EAAEH,gBAAiB;MAAAE,QAAA,EAC7Bd,MAAM,GAAG,YAAY,GAAG;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACRnB,MAAM,iBACHH,OAAA,CAACJ,MAAM;MACHW,oBAAoB,EAAEA,oBAAqB;MAC3CgB,KAAK,EAAC,SAAS;MACfC,QAAQ,EAAC,4BAA4B;MACrCC,YAAY,EAAEV;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACpB,EAAA,CA3CID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}