{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst ChatInput = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const [textArea, setTextArea] = useState(\"\");\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const addMessage = () => {\n    const message = {\n      timestamp: new Date().toISOString(),\n      from_userId: userId,\n      to_userId: clickedUserId,\n      message: textArea\n    };\n\n    // Emitiraj poruku na server\n    socket.emit('sendMessage', message);\n\n    // Očisti textarea\n    setTextArea(\"\");\n  };\n\n  // Primanje novih poruka\n  useEffect(() => {\n    socket.on('newMessage', message => {\n      // Ovdje možeš dodati kod za ažuriranje stanja poruka\n      console.log('Nova poruka:', message);\n    });\n    return () => {\n      socket.off('newMessage');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textArea,\n      onChange: e => setTextArea(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"secondary-button\",\n      onClick: addMessage,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"UFfY+1Pr/P4CmYWNcX1M6vVQCm0=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["useEffect","useState","io","jsxDEV","_jsxDEV","socket","ChatInput","user","clickedUser","_s","textArea","setTextArea","userId","user_id","clickedUserId","addMessage","message","timestamp","Date","toISOString","from_userId","to_userId","emit","on","console","log","off","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatInput.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst ChatInput = ({ user, clickedUser }) => {\r\n    const [textArea, setTextArea] = useState(\"\");\r\n\r\n    const userId = user?.user_id;\r\n    const clickedUserId = clickedUser?.user_id;\r\n\r\n    const addMessage = () => {\r\n        const message = {\r\n            timestamp: new Date().toISOString(),\r\n            from_userId: userId,\r\n            to_userId: clickedUserId,\r\n            message: textArea,\r\n        };\r\n\r\n        // Emitiraj poruku na server\r\n        socket.emit('sendMessage', message);\r\n\r\n        // Očisti textarea\r\n        setTextArea(\"\");\r\n    };\r\n\r\n    // Primanje novih poruka\r\n    useEffect(() => {\r\n        socket.on('newMessage', (message) => {\r\n            // Ovdje možeš dodati kod za ažuriranje stanja poruka\r\n            console.log('Nova poruka:', message);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('newMessage');\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"chat-input\">\r\n            <textarea value={textArea} onChange={(e) => setTextArea(e.target.value)} />\r\n            <button className=\"secondary-button\" onClick={addMessage}>Submit</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInput;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,MAAM,GAAGL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,OAAO;EAC5B,MAAMC,aAAa,GAAGN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,OAAO;EAE1C,MAAME,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,OAAO,GAAG;MACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,WAAW,EAAER,MAAM;MACnBS,SAAS,EAAEP,aAAa;MACxBE,OAAO,EAAEN;IACb,CAAC;;IAED;IACAL,MAAM,CAACiB,IAAI,CAAC,aAAa,EAAEN,OAAO,CAAC;;IAEnC;IACAL,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACZK,MAAM,CAACkB,EAAE,CAAC,YAAY,EAAGP,OAAO,IAAK;MACjC;MACAQ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,OAAO,CAAC;IACxC,CAAC,CAAC;IAEF,OAAO,MAAM;MACTX,MAAM,CAACqB,GAAG,CAAC,YAAY,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA;IAAKuB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBxB,OAAA;MAAUyB,KAAK,EAAEnB,QAAS;MAACoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3EhC,OAAA;MAAQuB,SAAS,EAAC,kBAAkB;MAACU,OAAO,EAAEtB,UAAW;MAAAa,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAvCIH,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}