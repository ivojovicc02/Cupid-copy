{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jovici\\\\Desktop\\\\zavrsni\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst ChatDisplay = ({\n  user,\n  clickedUser\n}) => {\n  _s();\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [messages, setMessages] = useState([]); // Sve poruke u jednom stanju\n\n  const getMessages = async () => {\n    try {\n      const [responseUserMessages, responseClickedUserMessages] = await Promise.all([axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      }), axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      })]);\n      // Kombiniraj poruke iz oba korisnika\n      const allMessages = [...responseUserMessages.data.map(msg => ({\n        ...msg,\n        name: user === null || user === void 0 ? void 0 : user.first_name,\n        img: user === null || user === void 0 ? void 0 : user.url\n      })), ...responseClickedUserMessages.data.map(msg => ({\n        ...msg,\n        name: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.first_name,\n        img: clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.url\n      }))];\n      setMessages(allMessages);\n    } catch (error) {\n      console.log(\"Error fetching messages:\", error);\n    }\n  };\n  useEffect(() => {\n    getMessages();\n    socket.emit('join_room', {\n      userId,\n      correspondingUserId: clickedUserId\n    });\n    socket.on('receive_message', messageData => {\n      // Ažuriraj stanje poruka sa primljenom porukom\n      setMessages(prevMessages => [...prevMessages, messageData]);\n    });\n    return () => {\n      socket.off('receive_message');\n    };\n  }, [userId, clickedUserId]);\n\n  // Sortiraj poruke po vremenskoj oznaci\n  const descendingOrderMessages = [...messages].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-display\",\n    children: descendingOrderMessages.length > 0 ? descendingOrderMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: msg.img,\n        alt: msg.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(msg.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No messages yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatDisplay, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","io","jsxDEV","_jsxDEV","socket","ChatDisplay","user","clickedUser","_s","userId","user_id","clickedUserId","messages","setMessages","getMessages","responseUserMessages","responseClickedUserMessages","Promise","all","get","params","correspondingUserId","allMessages","data","map","msg","name","first_name","img","url","error","console","log","emit","on","messageData","prevMessages","off","descendingOrderMessages","sort","a","b","Date","timestamp","className","children","length","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","text","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Jovici/Desktop/zavrsni/tinder-clone/client/src/components/ChatDisplay.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id;\r\n    const clickedUserId = clickedUser?.user_id;\r\n    const [messages, setMessages] = useState([]); // Sve poruke u jednom stanju\r\n\r\n    const getMessages = async () => {\r\n        try {\r\n            const [responseUserMessages, responseClickedUserMessages] = await Promise.all([\r\n                axios.get('http://localhost:8000/messages', {\r\n                    params: { userId: userId, correspondingUserId: clickedUserId }\r\n                }),\r\n                axios.get('http://localhost:8000/messages', {\r\n                    params: { userId: clickedUserId, correspondingUserId: userId }\r\n                })\r\n            ]);\r\n            // Kombiniraj poruke iz oba korisnika\r\n            const allMessages = [\r\n                ...responseUserMessages.data.map(msg => ({\r\n                    ...msg,\r\n                    name: user?.first_name,\r\n                    img: user?.url,\r\n                })),\r\n                ...responseClickedUserMessages.data.map(msg => ({\r\n                    ...msg,\r\n                    name: clickedUser?.first_name,\r\n                    img: clickedUser?.url,\r\n                })),\r\n            ];\r\n            setMessages(allMessages);\r\n        } catch (error) {\r\n            console.log(\"Error fetching messages:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessages();\r\n\r\n        socket.emit('join_room', { userId, correspondingUserId: clickedUserId });\r\n\r\n        socket.on('receive_message', (messageData) => {\r\n            // Ažuriraj stanje poruka sa primljenom porukom\r\n            setMessages((prevMessages) => [...prevMessages, messageData]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receive_message');\r\n        };\r\n    }, [userId, clickedUserId]);\r\n\r\n    // Sortiraj poruke po vremenskoj oznaci\r\n    const descendingOrderMessages = [...messages].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n\r\n    return (\r\n        <div className=\"chat-display\">\r\n            {descendingOrderMessages.length > 0 ? (\r\n                descendingOrderMessages.map((msg, index) => (\r\n                    <div key={index} className=\"message\">\r\n                        <img src={msg.img} alt={msg.name} />\r\n                        <div>\r\n                            <span>{msg.name}</span>\r\n                            <p>{msg.text}</p>\r\n                            <span>{new Date(msg.timestamp).toLocaleTimeString()}</span>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No messages yet.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}